#!/usr/bin/env bash

# https://systemcrafters.net/managing-your-dotfiles/using-gnu-stow/
# Sync dotfiles repo and ensure that dotfiles are tangled correctly afterward

BLUE='\033[1;36m'
RED='\033[1;30m'
NC='\033[0m'

printInColour () {
  local colour=$1
  local text=$2
  local newline="${3:-false}"

  local print="${colour}${text}${NC}"
  if $newline; then
    print="${print}\n"
  fi

  printf '%b' "${print}"
}

function blam {
  printInColour "$BLUE" "done" true
}

# Navigate to the directory of this script (generally ~/.dotfiles/.bin)
cd "$(dirname "$(readlink -f "$0")")" || exit 1
cd ..

printInColour "$BLUE" "Stashing existing changes..."
stash_result=$(git stash push -m "sync-dotfiles: Before syncing dotfiles")
if [ "$stash_result" = "No local changes to save" ]; then
  needs_pop=0
else
  needs_pop=1
fi
blam

printInColour "$BLUE" "Pulling updates from dotfiles repo..."
git pull origin main >/dev/null 2>&1
blam

if [[ $needs_pop -eq 1 ]]; then
  printInColour "$BLUE" "Popping stashed changes..."
  git stash pop >/dev/null 2>&1
  blam
fi

unmerged_files=$(git diff --name-only --diff-filter=U)
if [[ -n $unmerged_files ]]; then
  printInColour "$RED" "The following files have merge conflicts after popping the stash:" true
  printf %"s\n" "$unmerged_files"  # Ensure newlines are printed
else
  # Run stow to ensure all new dotfiles are linked
  printInColour "$BLUE" "Stowing files..."
  stow . >/dev/null 2>&1
  blam
fi

printInColour "$BLUE" "Dotfiles updated! Source ~/.bashrc to use latest." true

if [ "$(uname)" == "Darwin" ]; then
  printInColour "$BLUE" "Checking Brewfile dependencies..."
  brew bundle check
  blam
fi

exit 0
